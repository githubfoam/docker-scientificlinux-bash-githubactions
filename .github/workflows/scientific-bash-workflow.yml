name: "scientificlinux CI workflow"


on:
  push:
    branches: [ test ]


jobs:

  ubuntu-latest-job:
    name: "docker scientificlinux ubuntu latest"
    runs-on: ubuntu-latest
    env:
      distribution: "scientificlinux" # https://hub.docker.com/_/sl
      version: "latest"
      name: "scientificlinux/base"
      dockerfilename: "Dockerfile.scientific"
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: |
        hostnamectl status
        lsb_release -a
        lsb_release -d
        cat /etc/lsb-release
        cat /etc/issue
        cat /etc/os-release
        sudo apt-get install -y neofetch && neofetch   
        systemd-analyze
    - name: "docker build custom scientificlinux base"
      run: |
        # destroyed afterwards (use --rm )
        # all subsequent Dockerfile commands generate new images and the cache is not used
        sudo docker build --no-cache --rm  -t ${name}/${version}  . --file dockerfiles/${dockerfilename} 
        docker image ls
        docker container ls
        docker image history ${name}/${version}
        docker system df -v               
        docker image inspect ${name}/${version}
    - name: "run scientificlinux" 
      run: |
        docker run --name scifi-7 scientificlinux/sl:7 cat /etc/redhat-release
        docker run --name scifi-6 scientificlinux/sl:6 cat /etc/redhat-release
